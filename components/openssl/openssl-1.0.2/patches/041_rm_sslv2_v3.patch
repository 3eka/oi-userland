#
# This was developed in house.  Not applicable to the upstream.
#
--- openssl-1.0.1/ssl/s2_meth.c      Fri May  8 09:38:33 2015
+++ openssl-1.0.1/ssl/s2_meth.c.new       Fri May  8 09:51:53 2015
@@ -74,6 +74,13 @@
                          ssl2_accept, ssl2_connect, ssl2_get_method)
 #else                           /* !OPENSSL_NO_SSL2 */

+/* stub function */
+const SSL_METHOD *
+SSLv2_method(void)
+{
+       return (NULL);
+}
+
 # if PEDANTIC
 static void *dummy = &dummy;
 # endif
--- openssl-1.0.1/ssl/s2_clnt.c      Fri May  8 09:37:51 2015
+++ openssl-1.0.1/ssl/s2_clnt.c.new       Fri May  8 09:53:12 2015
@@ -1087,6 +1087,13 @@
 }
 #else                           /* !OPENSSL_NO_SSL2 */

+/* stub function */
+const SSL_METHOD *
+SSLv2_client_method(void)
+{
+       return (NULL);
+}
+
 # if PEDANTIC
 static void *dummy = &dummy;
 # endif
--- openssl-1.0.1/ssl/s2_srvr.c      Fri May  8 09:38:02 2015
+++ openssl-1.0.1/ssl/s2_srvr.c.new       Fri May  8 09:53:43 2015
@@ -1148,6 +1148,13 @@
 }
 #else                           /* !OPENSSL_NO_SSL2 */

+/* stub function */
+const SSL_METHOD *
+SSLv2_server_method(void)
+{
+        return (NULL);
+}
+
 # if PEDANTIC
 static void *dummy = &dummy;
 # endif
--- openssl-1.0.1/ssl/ssl.h	Tue May 26 11:13:15 2015
+++ openssl-1.0.1/ssl/ssl.h.new	Tue May 26 11:32:09 2015
@@ -2345,12 +2345,26 @@
 /* This sets the 'default' SSL version that SSL_new() will create */
 int SSL_CTX_set_ssl_version(SSL_CTX *ctx, const SSL_METHOD *meth);
 
-# ifndef OPENSSL_NO_SSL2
-const SSL_METHOD *SSLv2_method(void); /* SSLv2 */
-const SSL_METHOD *SSLv2_server_method(void); /* SSLv2 */
-const SSL_METHOD *SSLv2_client_method(void); /* SSLv2 */
-# endif

+#ifndef __has_attribute
+# define __has_attribute(x) 0
+#endif
+
+/* Mark SSLv2_* functions deprecated */
+#if __has_attribute(deprecated) \
+    || (defined(__GNUC__) && ((__GNUC__ * 100 + __GNUC_MINOR__) >= 301)) \
+    || (defined(__SUNPRO_C) && (__SUNPRO_C >= 0x5130))
+# define DEPRECATED __attribute__((deprecated))
+#else
+# define DEPRECATED
+#endif
+
+# ifndef OPENSSL_NO_SSL2
+DEPRECATED const SSL_METHOD *SSLv2_method(void); /* SSLv2 */
+DEPRECATED const SSL_METHOD *SSLv2_server_method(void); /* SSLv2 */
+DEPRECATED const SSL_METHOD *SSLv2_client_method(void); /* SSLv2 */
+# endif
+
 # ifndef OPENSSL_NO_SSL3_METHOD
 const SSL_METHOD *SSLv3_method(void); /* SSLv3 */
 const SSL_METHOD *SSLv3_server_method(void); /* SSLv3 */
--- openssl/ssl/s3_meth.c.orig	Fri Sep 11 12:19:54 2015
+++ openssl/ssl/s3_meth.c	Fri Sep 11 12:22:24 2015
@@ -71,4 +71,13 @@
 
 IMPLEMENT_ssl3_meth_func(SSLv3_method,
                          ssl3_accept, ssl3_connect, ssl3_get_method)
+#else	/* !OPENSSL_NO_SSL3_METHOD */
+
+/* stub function */
+const SSL_METHOD *
+SSLv3_method(void)
+{
+	return (NULL);
+}
+
 #endif
--- openssl/ssl/s3_clnt.c.orig	Fri Sep 11 12:21:09 2015
+++ openssl/ssl/s3_clnt.c	Fri Sep 11 12:24:31 2015
@@ -184,6 +184,15 @@
 IMPLEMENT_ssl3_meth_func(SSLv3_client_method,
                          ssl_undefined_function,
                          ssl3_connect, ssl3_get_client_method)
+#else	/* !OPENSSL_NO_SSL3_METHOD */
+
+/* stub function */
+const SSL_METHOD *
+SSLv3_client_method(void)
+{
+	return (NULL);
+}
+
 #endif
 int ssl3_connect(SSL *s)
 {
--- openssl/ssl/s3_srvr.c.orig	Fri Sep 11 12:21:18 2015
+++ openssl/ssl/s3_srvr.c	Fri Sep 11 12:24:15 2015
@@ -184,6 +184,15 @@
 IMPLEMENT_ssl3_meth_func(SSLv3_server_method,
                          ssl3_accept,
                          ssl_undefined_function, ssl3_get_server_method)
+#else	/* !OPENSSL_NO_SSL3_METHOD */
+
+/* stub function */
+const SSL_METHOD *
+SSLv3_server_method(void)
+{
+	return (NULL);
+}
+
 #endif
 #ifndef OPENSSL_NO_SRP
 static int ssl_check_srp_ext_ClientHello(SSL *s, int *al)
