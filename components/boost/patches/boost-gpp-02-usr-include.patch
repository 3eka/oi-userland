When boost is installed in /usr we have say it to 
avoid using include_next. By default it is done on Linux 
(as major distributions ship it there),  so in this 
we pretend to be Linux

test case:
echo '#include <boost/math/distributions/normal.hpp>' > test.cc
g++ -c -I/usr/include/boost/tr1/tr1  test.cc

Without patch you'll get error
config_all.hpp:151:26: error: no include path in which to search for utility

--- boost_1_55_0/boost/tr1/detail/config.hpp.~1~	2014-12-11 22:50:24.027545067 +0300
+++ boost_1_55_0/boost/tr1/detail/config.hpp	2014-12-11 22:55:40.221842248 +0300
@@ -8,10 +8,11 @@
 
 #include <cstddef>
 
-#if (defined(__GNUC__) && !(defined(linux) || defined(__linux) || defined(__linux__))) \
+#if (defined(__GNUC__) && !(defined(linux) || defined(__linux) || defined(__linux__)) && !(defined(__sun) || defined (__sun__))) \
    || (!defined(_AIX) && defined(__IBMCPP__)  && (__IBMCPP__ >= 800)) 
    // Disable use of #include_next on Linux as typically we are installed in a 
    // directory that is searched *after* the std lib include path.
+   // Do the same on OI Hipster - we install boost in /usr
 #if !defined(BOOST_HAS_INCLUDE_NEXT)
 #  define BOOST_HAS_INCLUDE_NEXT
 #endif
--- boost_1_55_0/boost/tr1/detail/config_all.hpp.~1~	2014-12-12 00:06:30.754490888 +0300
+++ boost_1_55_0/boost/tr1/detail/config_all.hpp	2014-12-12 00:08:30.819264133 +0300
@@ -107,8 +107,8 @@
 #    endif
 
 #      if !defined(BOOST_TR1_DISABLE_INCLUDE_NEXT) && !defined(__ICC) \
-            && (defined(linux) || defined(__linux) || defined(__linux__) || defined(__GNU__) || defined(__GLIBC__))
-         // Disable use of #include_next on Linux as typically we are installed in a directory that is searched
+            && (defined(linux) || defined(__linux) || defined(__linux__) || defined(__GNU__) || defined(__GLIBC__) || defined(__sun) || defined(__sun__))
+         // Disable use of #include_next on Linux and OI Hipster as typically we are installed in a directory that is searched
          // *after* the std lib include path:
 #        define BOOST_TR1_DISABLE_INCLUDE_NEXT
 #      endif
