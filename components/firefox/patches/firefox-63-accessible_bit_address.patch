diff --git a/accessible/src/generic/Accessible.cpp b/accessible/src/generic/Accessible.cpp
--- a/accessible/src/generic/Accessible.cpp
+++ b/accessible/src/generic/Accessible.cpp
@@ -2544,7 +2544,7 @@
 {
   // Mark the accessible as defunct, invalidate the child count and pointers to 
   // other accessibles, also make sure none of its children point to this parent
-  mStateFlags |= eIsDefunct;
+  mStateFlags = mStateFlags | eIsDefunct;
 
   InvalidateChildren();
   if (mParent)
diff --git a/accessible/src/generic/DocAccessible-inl.h b/accessible/src/generic/DocAccessible-inl.h
--- a/accessible/src/generic/DocAccessible-inl.h
+++ b/accessible/src/generic/DocAccessible-inl.h
@@ -72,7 +72,7 @@
   if (!mPresShell->GetRootFrame())
     return;
 
-  mDocFlags |= eScrollInitialized;
+  mDocFlags = mDocFlags | eScrollInitialized;
   nsIScrollableFrame* sf = mPresShell->GetRootScrollFrameAsScrollable();
   if (sf) {
     sf->AddScrollPositionListener(this);
@@ -95,7 +95,7 @@
 inline void
 DocAccessible::NotifyOfLoad(uint32_t aLoadEventType)
 {
-  mLoadState |= eDOMLoaded;
+  mLoadState = mLoadState | eDOMLoaded;
   mLoadEventType = aLoadEventType;
 
   // If the document is loaded completely then network activity was presumingly
diff --git a/accessible/src/generic/DocAccessible.cpp b/accessible/src/generic/DocAccessible.cpp
--- a/accessible/src/generic/DocAccessible.cpp
+++ b/accessible/src/generic/DocAccessible.cpp
@@ -78,8 +78,8 @@
   mVirtualCursor(nullptr),
   mPresShell(aPresShell)
 {
-  mGenericTypes |= eDocument;
-  mStateFlags |= eNotNodeMapEntry;
+  mGenericTypes = mGenericTypes | eDocument;
+  mStateFlags = mStateFlags | eNotNodeMapEntry;
 
   MOZ_ASSERT(mPresShell, "should have been given a pres shell");
   mPresShell->SetDocAccessible(this);
@@ -573,7 +573,7 @@
   // this point (this can happen because a11y is started late or DOM document
   // having no container was loaded.
   if (mDocumentNode->GetReadyStateEnum() == nsIDocument::READYSTATE_COMPLETE)
-    mLoadState |= eDOMLoaded;
+    mLoadState = mLoadState | eDOMLoaded;
 
   AddEventListeners();
 }
@@ -599,7 +599,7 @@
   // Mark the document as shutdown before AT is notified about the document
   // removal from its container (valid for root documents on ATK and due to
   // some reason for MSAA, refer to bug 757392 for details).
-  mStateFlags |= eIsDefunct;
+  mStateFlags = mStateFlags | eIsDefunct;
   nsCOMPtr<nsIDocument> kungFuDeathGripDoc = mDocumentNode;
   mDocumentNode = nullptr;
 
@@ -1457,9 +1457,9 @@
 DocAccessible::DoInitialUpdate()
 {
   if (nsCoreUtils::IsTabDocument(mDocumentNode))
-    mDocFlags |= eTabDocument;
+    mDocFlags = mDocFlags | eTabDocument;
 
-  mLoadState |= eTreeConstructed;
+  mLoadState = mLoadState | eTreeConstructed;
 
   // The content element may be changed before the initial update and then we
   // miss the notification (since content tree change notifications are ignored
@@ -1486,7 +1486,7 @@
 void
 DocAccessible::ProcessLoad()
 {
-  mLoadState |= eCompletelyLoaded;
+  mLoadState = mLoadState | eCompletelyLoaded;
 
 #ifdef A11Y_LOG
   if (logging::IsEnabled(logging::eDocLoad))
@@ -1900,7 +1900,7 @@
 void
 DocAccessible::UncacheChildrenInSubtree(Accessible* aRoot)
 {
-  aRoot->mStateFlags |= eIsNotInDocument;
+  aRoot->mStateFlags = aRoot->mStateFlags | eIsNotInDocument;
 
   nsIContent* rootContent = aRoot->GetContent();
   if (rootContent && rootContent->IsElement())
diff --git a/accessible/src/generic/FormControlAccessible.h b/accessible/src/generic/FormControlAccessible.h
--- a/accessible/src/generic/FormControlAccessible.h
+++ b/accessible/src/generic/FormControlAccessible.h
@@ -21,7 +21,7 @@
   ProgressMeterAccessible(nsIContent* aContent, DocAccessible* aDoc) :
     LeafAccessible(aContent, aDoc)
   {
-    mStateFlags |= eHasNumericValue;
+    mStateFlags = mStateFlags | eHasNumericValue;
     mType = eProgressType;
   }
 
diff --git a/accessible/src/generic/HyperTextAccessible.cpp b/accessible/src/generic/HyperTextAccessible.cpp
--- a/accessible/src/generic/HyperTextAccessible.cpp
+++ b/accessible/src/generic/HyperTextAccessible.cpp
@@ -43,7 +43,7 @@
   HyperTextAccessible(nsIContent* aNode, DocAccessible* aDoc) :
   AccessibleWrap(aNode, aDoc)
 {
-  mGenericTypes |= eHyperText;
+  mGenericTypes = mGenericTypes | eHyperText;
 }
 
 NS_IMPL_ADDREF_INHERITED(HyperTextAccessible, AccessibleWrap)
diff --git a/accessible/src/html/HTMLFormControlAccessible.h b/accessible/src/html/HTMLFormControlAccessible.h
--- a/accessible/src/html/HTMLFormControlAccessible.h
+++ b/accessible/src/html/HTMLFormControlAccessible.h
@@ -155,7 +155,7 @@
   HTMLRangeAccessible(nsIContent* aContent, DocAccessible* aDoc) :
     LeafAccessible(aContent, aDoc)
   {
-    mStateFlags |= eHasNumericValue;
+    mStateFlags = mStateFlags | eHasNumericValue;
   }
 
   NS_DECL_ISUPPORTS_INHERITED
diff --git a/accessible/src/html/HTMLImageMapAccessible.cpp b/accessible/src/html/HTMLImageMapAccessible.cpp
--- a/accessible/src/html/HTMLImageMapAccessible.cpp
+++ b/accessible/src/html/HTMLImageMapAccessible.cpp
@@ -153,7 +153,7 @@
 {
   // Make HTML area DOM element not accessible. HTML image map accessible
   // manages its tree itself.
-  mStateFlags |= eNotNodeMapEntry;
+  mStateFlags = mStateFlags | eNotNodeMapEntry;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/accessible/src/html/HTMLListAccessible.cpp b/accessible/src/html/HTMLListAccessible.cpp
--- a/accessible/src/html/HTMLListAccessible.cpp
+++ b/accessible/src/html/HTMLListAccessible.cpp
@@ -145,7 +145,7 @@
   HTMLListBulletAccessible(nsIContent* aContent, DocAccessible* aDoc) :
   LeafAccessible(aContent, aDoc)
 {
-  mStateFlags |= eSharedNode;
+  mStateFlags = mStateFlags | eSharedNode;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/accessible/src/html/HTMLListAccessible.h b/accessible/src/html/HTMLListAccessible.h
--- a/accessible/src/html/HTMLListAccessible.h
+++ b/accessible/src/html/HTMLListAccessible.h
@@ -22,7 +22,7 @@
 {
 public:
   HTMLListAccessible(nsIContent* aContent, DocAccessible* aDoc) :
-    HyperTextAccessibleWrap(aContent, aDoc) { mGenericTypes |= eList; }
+    HyperTextAccessibleWrap(aContent, aDoc) { mGenericTypes = mGenericTypes | eList; }
   virtual ~HTMLListAccessible() { }
 
   // nsISupports
diff --git a/accessible/src/html/HTMLSelectAccessible.cpp b/accessible/src/html/HTMLSelectAccessible.cpp
--- a/accessible/src/html/HTMLSelectAccessible.cpp
+++ b/accessible/src/html/HTMLSelectAccessible.cpp
@@ -369,7 +369,7 @@
   HTMLComboboxAccessible(nsIContent* aContent, DocAccessible* aDoc) :
   AccessibleWrap(aContent, aDoc)
 {
-  mGenericTypes |= eCombobox;
+  mGenericTypes = mGenericTypes | eCombobox;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -592,7 +592,7 @@
                              DocAccessible* aDoc) :
   HTMLSelectListAccessible(aContent, aDoc)
 {
-  mStateFlags |= eSharedNode;
+  mStateFlags = mStateFlags | eSharedNode;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/accessible/src/html/HTMLTableAccessible.h b/accessible/src/html/HTMLTableAccessible.h
--- a/accessible/src/html/HTMLTableAccessible.h
+++ b/accessible/src/html/HTMLTableAccessible.h
@@ -95,7 +95,7 @@
     AccessibleWrap(aContent, aDoc)
   {
     mType = eHTMLTableRowType;
-    mGenericTypes |= eTableRow;
+    mGenericTypes = mGenericTypes | eTableRow;
   }
   virtual ~HTMLTableRowAccessible() { }
 
@@ -125,7 +125,7 @@
     AccessibleWrap(aContent, aDoc), xpcAccessibleTable(this)
   {
     mType = eHTMLTableType;
-    mGenericTypes |= eTable;
+    mGenericTypes = mGenericTypes | eTable;
   }
 
   NS_DECL_ISUPPORTS_INHERITED
diff --git a/accessible/src/xul/XULColorPickerAccessible.cpp b/accessible/src/xul/XULColorPickerAccessible.cpp
--- a/accessible/src/xul/XULColorPickerAccessible.cpp
+++ b/accessible/src/xul/XULColorPickerAccessible.cpp
@@ -88,7 +88,7 @@
   XULColorPickerAccessible(nsIContent* aContent, DocAccessible* aDoc) :
   XULColorPickerTileAccessible(aContent, aDoc)
 {
-  mGenericTypes |= eMenuButton;
+  mGenericTypes = mGenericTypes | eMenuButton;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/accessible/src/xul/XULComboboxAccessible.cpp b/accessible/src/xul/XULComboboxAccessible.cpp
--- a/accessible/src/xul/XULComboboxAccessible.cpp
+++ b/accessible/src/xul/XULComboboxAccessible.cpp
@@ -28,9 +28,9 @@
 {
   if (mContent->AttrValueIs(kNameSpaceID_None, nsGkAtoms::type,
                             nsGkAtoms::autocomplete, eIgnoreCase))
-    mGenericTypes |= eAutoComplete;
+    mGenericTypes = mGenericTypes | eAutoComplete;
   else
-    mGenericTypes |= eCombobox;
+    mGenericTypes = mGenericTypes | eCombobox;
 }
 
 role
diff --git a/accessible/src/xul/XULElementAccessibles.h b/accessible/src/xul/XULElementAccessibles.h
--- a/accessible/src/xul/XULElementAccessibles.h
+++ b/accessible/src/xul/XULElementAccessibles.h
@@ -55,7 +55,7 @@
 public:
   XULLabelTextLeafAccessible(nsIContent* aContent, DocAccessible* aDoc) :
     TextLeafAccessibleWrap(aContent, aDoc)
-  { mStateFlags |= eSharedNode; }
+  { mStateFlags = mStateFlags | eSharedNode; }
 
   virtual ~XULLabelTextLeafAccessible() { }
 
diff --git a/accessible/src/xul/XULFormControlAccessible.cpp b/accessible/src/xul/XULFormControlAccessible.cpp
--- a/accessible/src/xul/XULFormControlAccessible.cpp
+++ b/accessible/src/xul/XULFormControlAccessible.cpp
@@ -40,7 +40,7 @@
   AccessibleWrap(aContent, aDoc)
 {
   if (ContainsMenu())
-    mGenericTypes |= eMenuButton;
+    mGenericTypes = mGenericTypes | eMenuButton;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/accessible/src/xul/XULListboxAccessible.cpp b/accessible/src/xul/XULListboxAccessible.cpp
--- a/accessible/src/xul/XULListboxAccessible.cpp
+++ b/accessible/src/xul/XULListboxAccessible.cpp
@@ -108,7 +108,7 @@
     nsCOMPtr<nsIAutoCompletePopup> autoCompletePopupElm =
       do_QueryInterface(parentContent);
     if (autoCompletePopupElm)
-      mGenericTypes |= eAutoCompletePopup;
+      mGenericTypes = mGenericTypes | eAutoCompletePopup;
   }
 }
 
diff --git a/accessible/src/xul/XULSelectControlAccessible.cpp b/accessible/src/xul/XULSelectControlAccessible.cpp
--- a/accessible/src/xul/XULSelectControlAccessible.cpp
+++ b/accessible/src/xul/XULSelectControlAccessible.cpp
@@ -31,7 +31,7 @@
   XULSelectControlAccessible(nsIContent* aContent, DocAccessible* aDoc) :
   AccessibleWrap(aContent, aDoc)
 {
-  mGenericTypes |= eSelect;
+  mGenericTypes = mGenericTypes | eSelect;
   mSelectControl = do_QueryInterface(aContent);
 }
 
diff --git a/accessible/src/xul/XULSliderAccessible.cpp b/accessible/src/xul/XULSliderAccessible.cpp
--- a/accessible/src/xul/XULSliderAccessible.cpp
+++ b/accessible/src/xul/XULSliderAccessible.cpp
@@ -21,7 +21,7 @@
   XULSliderAccessible(nsIContent* aContent, DocAccessible* aDoc) :
   AccessibleWrap(aContent, aDoc)
 {
-  mStateFlags |= eHasNumericValue;
+  mStateFlags = mStateFlags | eHasNumericValue;
 }
 
 // nsISupports
diff --git a/accessible/src/xul/XULTreeAccessible.cpp b/accessible/src/xul/XULTreeAccessible.cpp
--- a/accessible/src/xul/XULTreeAccessible.cpp
+++ b/accessible/src/xul/XULTreeAccessible.cpp
@@ -43,7 +43,7 @@
   AccessibleWrap(aContent, aDoc)
 {
   mType = eXULTreeType;
-  mGenericTypes |= eSelect;
+  mGenericTypes = mGenericTypes | eSelect;
 
   nsCOMPtr<nsITreeView> view = aTreeFrame->GetExistingView();
   mTreeView = view;
@@ -56,7 +56,7 @@
     nsCOMPtr<nsIAutoCompletePopup> autoCompletePopupElm =
       do_QueryInterface(parentContent);
     if (autoCompletePopupElm)
-      mGenericTypes |= eAutoCompletePopup;
+      mGenericTypes = mGenericTypes | eAutoCompletePopup;
   }
 
   mAccessibleCache.Init(kDefaultTreeCacheSize);
@@ -704,7 +704,7 @@
   mTree(aTree), mTreeView(aTreeView), mRow(aRow)
 {
   mParent = aParent;
-  mStateFlags |= eSharedNode;
+  mStateFlags = mStateFlags | eSharedNode;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/accessible/src/xul/XULTreeGridAccessible.cpp b/accessible/src/xul/XULTreeGridAccessible.cpp
--- a/accessible/src/xul/XULTreeGridAccessible.cpp
+++ b/accessible/src/xul/XULTreeGridAccessible.cpp
@@ -269,7 +269,7 @@
                            nsITreeView* aTreeView, int32_t aRow) :
   XULTreeItemAccessibleBase(aContent, aDoc, aTreeAcc, aTree, aTreeView, aRow)
 {
-  mGenericTypes |= eTableRow;
+  mGenericTypes = mGenericTypes | eTableRow;
 
   mAccessibleCache.Init(kDefaultTreeCacheSize);
 }
@@ -452,7 +452,7 @@
   mTreeView(aTreeView), mRow(aRow), mColumn(aColumn)
 {
   mParent = aRowAcc;
-  mStateFlags |= eSharedNode;
+  mStateFlags = mStateFlags | eSharedNode;
 
   NS_ASSERTION(mTreeView, "mTreeView is null");
 
diff --git a/accessible/src/xul/XULTreeGridAccessible.h b/accessible/src/xul/XULTreeGridAccessible.h
--- a/accessible/src/xul/XULTreeGridAccessible.h
+++ b/accessible/src/xul/XULTreeGridAccessible.h
@@ -27,7 +27,7 @@
   XULTreeGridAccessible(nsIContent* aContent, DocAccessible* aDoc,
                         nsTreeBodyFrame* aTreeFrame) :
     XULTreeAccessible(aContent, aDoc, aTreeFrame), xpcAccessibleTable(this)
-    { mGenericTypes |= eTable; }
+    { mGenericTypes = mGenericTypes | eTable; }
 
   // nsISupports
   NS_DECL_ISUPPORTS_INHERITED
