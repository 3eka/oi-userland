--- mozilla-esr24/netwerk/base/public/security-prefs.js.orig	2014-10-17 17:23:11.165344447 +0530
+++ mozilla-esr24/netwerk/base/public/security-prefs.js	2014-10-17 17:23:54.507229209 +0530
@@ -2,7 +2,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
-pref("security.tls.version.min", 0);
+pref("security.tls.version.min", 1);
 pref("security.tls.version.max", 1);
 pref("security.enable_tls_session_tickets", true);
 pref("security.enable_md5_signatures", false);
--- mozilla-esr24/security/manager/ssl/src/nsNSSComponent.cpp.orig	2014-10-17 17:26:03.038639721 +0530
+++ mozilla-esr24/security/manager/ssl/src/nsNSSComponent.cpp	2014-10-17 17:27:42.067654579 +0530
@@ -956,13 +956,13 @@ void nsNSSComponent::setValidationOption
   SSL_ClearSessionCache();
 }
 
-// Enable the TLS versions given in the prefs, defaulting to SSL 3.0 and
-// TLS 1.0 when the prefs aren't set or when they are set to invalid values.
+// Enable the TLS versions given in the prefs, defaulting to TLS1.0(Min) and
+// TLS 1.0(Max) when the prefs aren't set or when they are set to invalid values.
 nsresult
 nsNSSComponent::setEnabledTLSVersions(nsIPrefBranch * prefBranch)
 {
   // keep these values in sync with security-prefs.js and firefox.js
-  static const int32_t PSM_DEFAULT_MIN_TLS_VERSION = 0;
+  static const int32_t PSM_DEFAULT_MIN_TLS_VERSION = 1;
   static const int32_t PSM_DEFAULT_MAX_TLS_VERSION = 1;
 
   int32_t minVersion = PSM_DEFAULT_MIN_TLS_VERSION;
